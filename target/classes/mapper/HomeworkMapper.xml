<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="HomeworkDao">

	<!-- 특정 학생(user_no)에 등록된 강좌 목록 불러오기 -->
   <select id="getLecturesByUser" parameterType="int" resultType="com.javaclass.teamAcademy.vo.CourseVO">
		SELECT 
		    c.course_no,
		    c.course_name,
		    u.user_name AS instructor_name
		FROM course c
		JOIN user_account u ON c.course_instructor = u.user_no
		WHERE c.course_no IN (
		    SELECT course_no
		    FROM course_registration
		    WHERE COURSE_REGI_STUDENT = #{userNo})
	</select>

	<!-- 강좌에 따른 과제 목록 불러오기 -->
	<select id="getHomeworkByCourse" parameterType="int" resultType="com.javaclass.teamAcademy.vo.HomeworkVO">
		SELECT 
	        hw.hw_no, 
	        hw.hw_title, 
	        hw.hw_context, 
	        TO_CHAR(hw.hw_startdate, 'YYYY-MM-DD') AS hw_startdate, 
	        TO_CHAR(hw.hw_enddate, 'YYYY-MM-DD') AS hw_enddate, 
	        TO_CHAR(hw.hw_enddate, 'HH24:MI') AS hw_endtime, 
	        hw.hw_course, 
	        c.course_instructor, 
	        c.course_name, 
	        u.user_name 
	    FROM homework hw
	    JOIN course c ON hw.hw_course = c.course_no
	    JOIN user_account u ON c.course_instructor = u.user_no
	    WHERE hw.hw_course = #{courseNo}
	    ORDER BY hw.hw_no DESC
	</select>

	<!-- hwNo에 따른 과제 세부사항 가져옴. -->
	<select id="getHomeworkDetails" parameterType="int" resultType="com.javaclass.teamAcademy.vo.HomeworkVO">
	    SELECT 
		    hw.hw_no, 
		    hw.hw_title, 
		    NVL(hw.hw_context, 'No description available') AS hw_context,
		    TO_CHAR(hw.hw_startdate, 'YYYY-MM-DD') AS hw_startdate,
		    TO_CHAR(hw.hw_enddate, 'YYYY-MM-DD') AS hw_enddate,
		    TO_CHAR(hw.hw_enddate, 'HH24:MI') AS hw_endtime,
		    hw.hw_course,
		    c.course_instructor,
		    NVL(c.course_name, 'Unknown Course') AS course_name, 
		    NVL(u.user_name, 'Unknown Instructor') AS user_name
		FROM homework hw
		LEFT JOIN course c ON hw.hw_course = c.course_no
		LEFT JOIN user_account u ON c.course_instructor = u.user_no
		WHERE hw.hw_course = #{hwNo}
		ORDER BY hw.hw_no DESC
	</select>

	<insert id="saveHomeworkSubmission" parameterType="com.javaclass.teamAcademy.vo.HomeworkDoneVO">
	    INSERT INTO homework_done( hw_done_no,  hw_done_student, hw_done_title, hw_done_date, upload_no )
	    VALUES ( TEAM2PRO.SEQ_HW_DONE_NO.NEXTVAL,  #{userNo}, #{doneTitle}, #{doneDate}, #{uploadNo} )
	</insert>
	
	<insert id="saveUpload" parameterType="map">
	    INSERT INTO upload ( upload_no,  service_no, upload_location )
	    VALUES ( TEAM2PRO.SEQ_UPLOAD_NO.NEXTVAL,  3, #{filePath} )
	</insert>
	
	<select id="getLastUploadId" resultType="int">
	    SELECT MAX(upload_no) FROM upload
	</select>

	 
</mapper>