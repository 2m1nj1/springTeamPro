<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SysCourseDAO">
	
	<select id="selectCourseCateList" resultType="com.javaclass.teamAcademy.vo.CourseCateVO">
		SELECT
			COURSE_CATE_NO
			, COURSE_CATE_UPNO 
			, COURSE_CATE_NAME
		FROM COURSE_CATE
		WHERE COURSE_CATE_NO > 0
	</select>
	
	<insert id="insertCourse" parameterType="com.javaclass.teamAcademy.vo.CourseVO">
		INSERT INTO COURSE (
				COURSE_NO 
				, COURSE_NAME 
				, COURSE_INSTRUCTOR 
				, COURSE_STARTDATE 
				, COURSE_ENDDATE 
				, COURSE_CLASSROOM 
				, COURSE_MAXPERSON 
				, COURSE_FEE 
				, COURSE_CATE_NO 
				, COURSE_STATUS 
				)
			VALUES (
				seq_course_no.nextval
				, #{course_name}
				, #{course_instructor}
				, #{course_startDate}
				, #{course_endDate}
				, #{course_classroom}
				, #{course_maxPerson}
				, #{course_fee}
				, #{course_cate_no}
				, #{course_status}
			)
			
			<selectKey keyProperty="course_no" resultType="int" order="AFTER">
				SELECT seq_course_no.CURRVAL FROM DUAL
			</selectKey>
			
	</insert>
	
	<insert id="insertLectureList" parameterType="com.javaclass.teamAcademy.vo.LectureVO">
		INSERT INTO LECTURE (
			LECTURE_NO
			, COURSE_NO 
			, LECTURE_ROWNUM
			, LECTURE_NAME
			, LECTURE_DETAIL
		)
		VALUES (
			seq_lecture_no.nextval
			, #{course_no}
			, #{lecture_rownum}
			, #{lecture_name}
			, #{lecture_detail}
			)
	</insert>
	
	<insert id="insertSchList" parameterType="com.javaclass.teamAcademy.vo.CourseSchVO">
		INSERT INTO COURSE_SCHEDULE (
			COURSE_SCHEDULE_NO
			, COURSE_NO 
			, COURSE_STARTTIME 
			, COURSE_ENDTIME 
			, COURSE_DAYOFWEEK 
		)
		VALUES (
			seq_course_sch_no.nextval
			, #{course_no}
			, #{course_startTime}
			, #{course_endTime}
			, #{course_dayOfWeek}
		)
	</insert>
	
	<select id="selectCourseList" resultType="com.javaclass.teamAcademy.vo.CourseVO">
		SELECT
		    c.COURSE_NO COURSE_NO
		    , c.COURSE_NAME COURSE_NAME
		    , NVL(ua.USER_NAME, '-') COURSE_INSTRUCTOR
		    , NVL(c2.classroom_name, '-') CLASSROOM_NAME
		    , NVL(coursedays.COURSE_DAYOFWEEK, '-') COURSE_DAYS
		    , cntstu.cntstu || '/' || c.COURSE_MAXPERSON COURSE_PERSON
		    , c.COURSE_STATUS COURSE_STATUS
		    , NVL(c.COURSE_FEE, 0) COURSE_FEE
		FROM COURSE c
		LEFT OUTER JOIN USER_ACCOUNT ua 
		    ON c.COURSE_INSTRUCTOR = ua.USER_NO
		LEFT OUTER JOIN (
		    SELECT c1.COURSE_NO, COUNT(cr1.COURSE_NO) AS cntstu
		    FROM COURSE c1
		    LEFT OUTER JOIN COURSE_REGISTRATION cr1 
		        ON c1.COURSE_NO = cr1.COURSE_NO
		    GROUP BY c1.COURSE_NO
		) cntstu 
		    ON cntstu.COURSE_NO = c.COURSE_NO
		LEFT OUTER JOIN (
		    SELECT
		        course_no,
		        LISTAGG(COURSE_DAYOFWEEK, ', ')
		            WITHIN GROUP (
		                ORDER BY
		                    CASE
		                        WHEN COURSE_DAYOFWEEK = '월' THEN 1
		                        WHEN COURSE_DAYOFWEEK = '화' THEN 2
		                        WHEN COURSE_DAYOFWEEK = '수' THEN 3
		                        WHEN COURSE_DAYOFWEEK = '목' THEN 4
		                        WHEN COURSE_DAYOFWEEK = '금' THEN 5
		                        WHEN COURSE_DAYOFWEEK = '토' THEN 6
		                        WHEN COURSE_DAYOFWEEK = '일' THEN 7
		                    END
		            ) AS COURSE_DAYOFWEEK
		    FROM COURSE_SCHEDULE
		    GROUP BY COURSE_NO
		) coursedays 
		    ON coursedays.COURSE_NO = c.COURSE_NO
		LEFT OUTER JOIN CLASSROOM c2 
			ON c2.classroom_no = c.COURSE_CLASSROOM 
		ORDER BY c.COURSE_NO
	</select>
	
	<select id="selectCourseInfo" parameterType="com.javaclass.teamAcademy.vo.CourseVO" resultType="com.javaclass.teamAcademy.vo.CourseVO">	
		SELECT
			c1.COURSE_NO COURSE_NO
			, c1.COURSE_NAME COURSE_NAME
			, TO_CHAR(c1.COURSE_STARTDATE, 'yyyy-mm-dd') COURSE_STARTDATE
			, TO_CHAR(c1.COURSE_ENDDATE, 'yyyy-mm-dd') COURSE_ENDDATE
			, c1.COURSE_INSTRUCTOR COURSE_INSTRUCTOR
			, '(' || c1.COURSE_INSTRUCTOR || ') ' || ua.USER_NAME INSTRUCTOR_NAME
			, c1.COURSE_CLASSROOM COURSE_CLASSROOM 
			, '(' || c1.COURSE_CLASSROOM  || ') ' ||  c.CLASSROOM_NAME CLASSROOM_NAME
			, c1.COURSE_FEE COURSE_FEE
			, cntstu.cntstu COURSE_PERSON
			, c1.COURSE_MAXPERSON COURSE_MAXPERSON
			, c1.COURSE_STATUS COURSE_STATUS
			, c1.COURSE_CATE_NO COURSE_CATE_NO
			, cc.COURSE_CATE_NAME COURSE_CATE_NAME
		FROM COURSE c1
		LEFT OUTER JOIN USER_ACCOUNT ua
			ON ua.USER_NO = COURSE_INSTRUCTOR
		LEFT OUTER JOIN CLASSROOM c
			ON c.CLASSROOM_NO = c1.COURSE_CLASSROOM
		LEFT OUTER JOIN (
				    SELECT c2.COURSE_NO COURSE_NO, COUNT(cr1.COURSE_NO) AS cntstu
				    FROM COURSE c2
				    LEFT OUTER JOIN COURSE_REGISTRATION cr1 
				        ON c2.COURSE_NO = cr1.COURSE_NO
				    GROUP BY c2.COURSE_NO
				) cntstu
		ON cntstu.COURSE_NO = c1.COURSE_NO
		LEFT OUTER JOIN COURSE_CATE cc
			ON cc.COURSE_CATE_NO = c1.COURSE_CATE_NO
		WHERE c1.COURSE_NO = #{course_no}
	</select>
	
	
	<select id="selectCourseSch" parameterType="com.javaclass.teamAcademy.vo.CourseVO" resultType="com.javaclass.teamAcademy.vo.CourseSchVO">
		SELECT *
		FROM COURSE_SCHEDULE cs
		WHERE COURSE_NO  = #{course_no}
		ORDER BY COURSE_SCHEDULE_NO
	</select>
	
	<select id="selectCourseLec"  parameterType="com.javaclass.teamAcademy.vo.CourseVO" resultType="com.javaclass.teamAcademy.vo.LectureVO">
		SELECT *
		FROM LECTURE l 
		WHERE COURSE_NO = #{course_no}
		ORDER BY LECTURE_ROWNUM
	</select>
	
</mapper>